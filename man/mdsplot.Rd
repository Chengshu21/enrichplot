% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/mdsplot.R
\name{mdsplot}
\alias{mdsplot}
\alias{mdsplot,enrichResult-method}
\alias{mdsplot,gseaResult-method}
\alias{mdsplot,compareClusterResult-method}
\alias{mdsplot.enrichResult}
\alias{mdsplot.compareClusterResult}
\title{mdsplot}
\usage{
mdsplot(x, ...)

\S4method{mdsplot}{enrichResult}(x, showCategory = 30, color = "p.adjust", label_format = 30, ...)

\S4method{mdsplot}{gseaResult}(x, showCategory = 30, color = "p.adjust", label_format = 30, ...)

\S4method{mdsplot}{compareClusterResult}(x, showCategory = 30, label_format = 30, ...)

mdsplot.enrichResult(
  x,
  showCategory = 30,
  color = "p.adjust",
  label_format = 30,
  nWords = 4,
  nCluster = NULL,
  split = NULL,
  cex_label_group = 1,
  group_legend = FALSE,
  cex_category = 1,
  repel = FALSE,
  shadowtext = TRUE,
  engine = "cmdscale",
  group_category = TRUE,
  cex_label_category = 1,
  ...
)

mdsplot.compareClusterResult(
  x,
  showCategory = 30,
  nWords = 4,
  nCluster = NULL,
  split = NULL,
  cex_label_group = 1,
  pie = "equal",
  legend_n = 3,
  cex_category = 1,
  group_legend = FALSE,
  label_format = 30,
  repel = FALSE,
  shadowtext = TRUE,
  engine = "cmdscale",
  group_category = TRUE,
  cex_label_category = 1,
  ...
)
}
\arguments{
\item{x}{Enrichment result.}

\item{...}{Additional parameters used to set the position of the group label.
When the parameter repel is set to TRUE, additional parameters will take effect.

additional parameters can refer the following parameters.
    \itemize{
       \item \code{force} Force of repulsion between overlapping text labels. Defaults to 1.
       \item \code{nudge_x, nudge_y} Horizontal and vertical adjustments to nudge
        the starting position of each text label.
       \item \code{direction} "both", "x", or "y" â€“ direction in which to adjust position of labels.
    }}

\item{showCategory}{A number or a vector of terms. If it is a number, 
the first n terms will be displayed. If it is a vector of terms, 
the selected terms will be displayed.}

\item{color}{variable that used to color enriched terms, e.g. pvalue,
p.adjust or qvalue}

\item{label_format}{a numeric value sets wrap length, alternatively a
custom function to format axis labels.}

\item{nWords}{Numeric, the number of words in the cluster tags, the default value is 4.}

\item{nCluster}{Numeric, the number of clusters,
the default value is square root of the number of nodes.}

\item{split}{Separate result by 'category' variable}

\item{cex_label_group}{Numeric, scale of group labels size, the default value is 1.}

\item{group_legend}{Logical, if TRUE, the grouping legend will be displayed.
The default is FALSE}

\item{cex_category}{Numeric, indicating the size by which plotting category
nodes should be scaled relative to the default.}

\item{repel}{whether to correct the position of the label. Defaults to FALSE.}

\item{shadowtext}{a logical value, whether to use shadow font. Defaults to TRUE.}

\item{engine}{The function used for MDS, 
one of "cmdscale" (the default), "sammon", "monoMDS" and "isoMDS".}

\item{group_category}{Logical, if TRUE (the default), group the terms.}

\item{cex_label_category}{Scale of category node label size.}

\item{pie}{Proportion of clusters in the pie chart, one of
'equal' (default) and 'Count'.}

\item{legend_n}{Number of circle in legend, the default value is 5.}
}
\value{
ggplot object
}
\description{
principal multidimensional scaling(MDS) diagram of enrichment analysis results.
}
\examples{
\dontrun{
    library(clusterProfiler)
    library(org.Hs.eg.db)
    library(enrichplot)
    library(GOSemSim)
    library(DOSE)
    data(geneList)
    gene <- names(geneList)[abs(geneList) > 2]
    ego <- enrichGO(gene  = gene,
        universe      = names(geneList),
        OrgDb         = org.Hs.eg.db,
        ont           = "BP",
        pAdjustMethod = "BH",
        pvalueCutoff  = 0.01,
        qvalueCutoff  = 0.05,
        readable      = TRUE)
    d <- godata('org.Hs.eg.db', ont="BP")
    ego2 <- pairwise_termsim(ego, method = "Wang", semData = d)
    mdsplot(ego2)    
}
}
